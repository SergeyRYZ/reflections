What happens when you initialize a repository? Why do you need to do it?

A folder becomes a Git repository, what allows us to track version history
using commits. A hidden .git folder is created as well to store all the
metadata.

How is the staging area different from the working directory and the repository? What value do you think it offers?
Staging area is a sort of a commit mockup. It allows us to fine tune and
preview each commit before recording it. Without it commits may contain
wrong files, comments or other mistakes.

How can you use the staging area to make sure you have one commit per logical change?
Stagin are can be compared with bot the working directory and the previous
commit. It gives us the ability to see exactly what changes are about to be
committed - which virtually eliminates a possibility of mistakes.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Branches would be great to be able to develop a few different approaches to the same thing
as well as experimental changes/features or aything you want to try but not ready to add to
the current branch. Like me adding the GUI to the text quest -_-

How do the diagrams help you visualize the branch structure?
I didn't draw a diagram, but even the --graph output was very informative, which can
be of huge help when deciding which commits were successful and what the ideal final
version could look like.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
Merging two branches brings the commits from both into a single version, which
means changes from both of these get applied to the final result - bringing the
bug fixes, new features etc. together. Honestly I don't quite remember how we 
represent it but it essentially shows two sets of commits joining into one.

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?
Automatic merging of changes can save us a lot of time, while its cautious stance
on 'dubious' changes allows avoid any potentially unwanted changes at the same time.